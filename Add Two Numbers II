class Solution {
    public ListNode reverse(ListNode head)
    {
        if(head==null || head.next==null)
        return head;

        ListNode prev=null;
        ListNode temp=head;
        while(temp!=null)
        {
            ListNode front=temp.next;
            temp.next=prev;
            prev=temp;
            temp=front;
        }
        return prev;
    }
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode t1=reverse(l1);
        ListNode t2=reverse(l2);

        int carry=0;

        ListNode dummy=new ListNode(0);
        ListNode current=dummy;

        while(t1!=null || t2!=null || carry!=0)
        {
            int sum=carry;
            if(t1!=null)
            {
                sum+=t1.val;
                t1=t1.next;
            }
            if(t2!=null)
            {
                sum+=t2.val;
                t2=t2.next;
            }
            carry=sum/10;
            current.next=new ListNode(sum%10);
            current=current.next;
        }
        return reverse(dummy.next);
    }
}
