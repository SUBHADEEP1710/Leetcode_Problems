class Solution {
    public int uniquePathsWithObstacles(int[][] grid) {
        if(grid[0][0]==1)
        {
        return 0;
        }
        int m=grid.length;
        int n=grid[0].length;

        int dp[][]=new int[m+1][n+1];

        for(int i = 0;i<=m;i++){
            for(int j = 0;j<=n;j++){
                dp[i][j] = -1;
            }
        }

        return c(m,n,dp,grid);      
    }
    public int c(int m,int n,int dp[][],int grid[][])
    {
        if(m==0 || n==0 || grid[m-1][n-1]==1)
        return dp[m][n]=0;

        if(m==1 && n==1)
        {
            return 1;
        }
        if(dp[m][n]!=-1)
        return dp[m][n];

        return dp[m][n]=c(m-1,n,dp,grid)+c(m,n-1,dp,grid);
    }
}
